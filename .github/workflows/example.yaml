name: Example Workflow

on:
  push:
    branches:
      - main
      - master
      - staging
      - qa
  pull_request:
    types: [opened,synchronize,reopened]

jobs:
  build:
    name: Build and Push `vote`
    runs-on: ubuntu-latest
    outputs:
      tags: ${{ steps.meta.outputs.tags }}
    steps:
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
      - name: Checkout git repo
        uses: actions/checkout@v3
      - name: Docker metadata
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: UffizziCloud/guestbook
      - name: Build and Push Image to Docker Hub
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  deploy-uffizzi-preview:
    name: Preview on Uffizzi
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    needs: 
      - build
    steps:
      - name: Checkout git repo
        uses: actions/checkout@v3
      - name: Render Compose File
        run: |
          IMAGE=$(echo ${{ needs.build.outputs.tags }})
          export IMAGE
          # Render simple template from environment variables.
          envsubst < docker-compose.template.yaml > docker-compose.rendered.yaml
          cat docker-compose.rendered.yaml
      - name: Deploy preview
        id: preview
        uses: UffizziCloud/preview-action@master
        with:
          compose-file: 'docker-compose.rendered.yaml'
          username: user@uffizzi.com
          server: https://temp-2022-04.uffizzicloud.com/
          project: default
          password: ${{ secrets.UFFIZZI_PASSWORD }}
      - name: Check outputs
        run: echo "${{ steps.preview.outputs.id }} at ${{ steps.preview.outputs.url }}"
      - name: Confirm Successful Preview Deployment
        uses: docker://curlimages/curl:7.82.0
        with:
          args: --retry 5 --retry-all-errors --retry-delay 0 --fail --location ${{ steps.preview.outputs.url }}

      # If PR, put deployment URL and ID in the PR comments
      - name: Find comment for deployment URL
        uses: peter-evans/find-comment@v1
        if: github.event_name == 'pull_request'
        id: fc
        with:
          issue-number: ${{ github.event.pull_request.number }}
          comment-author: 'github-actions[bot]'
          body-includes: Uffizzi Preview deployed
      - name: Create or update comment for deployment URL
        uses: peter-evans/create-or-update-comment@v1
        if: github.event_name == 'pull_request'
        with:
          comment-id: ${{ steps.fc.outputs.comment-id }}
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            Uffizzi Preview deployed:
            ${{ steps.preview.outputs.url }}

            Uffizzi Preview ID: `${{ steps.preview.outputs.id }}`
          edit-mode: replace
